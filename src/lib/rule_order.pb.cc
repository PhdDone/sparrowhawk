// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rule_order.proto

#include "rule_order.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
namespace speech {
namespace sparrowhawk {
class RuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rule>
      _instance;
} _Rule_default_instance_;
class GrammarDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Grammar>
      _instance;
} _Grammar_default_instance_;
}  // namespace sparrowhawk
}  // namespace speech
namespace protobuf_rule_5forder_2eproto {
void InitDefaultsRuleImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::speech::sparrowhawk::_Rule_default_instance_;
    new (ptr) ::speech::sparrowhawk::Rule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::speech::sparrowhawk::Rule::InitAsDefaultInstance();
}

void InitDefaultsRule() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRuleImpl);
}

void InitDefaultsGrammarImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_rule_5forder_2eproto::InitDefaultsRule();
  {
    void* ptr = &::speech::sparrowhawk::_Grammar_default_instance_;
    new (ptr) ::speech::sparrowhawk::Grammar();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::speech::sparrowhawk::Grammar::InitAsDefaultInstance();
}

void InitDefaultsGrammar() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGrammarImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::Rule, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::Rule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::Rule, main_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::Rule, parens_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::Rule, assignments_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::Rule, redup_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::Grammar, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::Grammar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::Grammar, grammar_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::Grammar, grammar_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::Grammar, rules_),
  0,
  1,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::speech::sparrowhawk::Rule)},
  { 13, 21, sizeof(::speech::sparrowhawk::Grammar)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::speech::sparrowhawk::_Rule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::speech::sparrowhawk::_Grammar_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "rule_order.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020rule_order.proto\022\022speech.sparrowhawk\"H"
      "\n\004Rule\022\014\n\004main\030\001 \002(\t\022\016\n\006parens\030\002 \001(\t\022\023\n\013"
      "assignments\030\003 \001(\t\022\r\n\005redup\030\004 \001(\t\"^\n\007Gram"
      "mar\022\024\n\014grammar_file\030\001 \002(\t\022\024\n\014grammar_nam"
      "e\030\002 \002(\t\022\'\n\005rules\030\003 \003(\0132\030.speech.sparrowh"
      "awk.Rule"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 208);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rule_order.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_rule_5forder_2eproto
namespace speech {
namespace sparrowhawk {

// ===================================================================

void Rule::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rule::kMainFieldNumber;
const int Rule::kParensFieldNumber;
const int Rule::kAssignmentsFieldNumber;
const int Rule::kRedupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rule::Rule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rule_5forder_2eproto::InitDefaultsRule();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:speech.sparrowhawk.Rule)
}
Rule::Rule(const Rule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  main_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_main()) {
    main_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.main_);
  }
  parens_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_parens()) {
    parens_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parens_);
  }
  assignments_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_assignments()) {
    assignments_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.assignments_);
  }
  redup_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_redup()) {
    redup_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redup_);
  }
  // @@protoc_insertion_point(copy_constructor:speech.sparrowhawk.Rule)
}

void Rule::SharedCtor() {
  _cached_size_ = 0;
  main_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parens_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  assignments_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redup_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Rule::~Rule() {
  // @@protoc_insertion_point(destructor:speech.sparrowhawk.Rule)
  SharedDtor();
}

void Rule::SharedDtor() {
  main_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parens_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  assignments_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redup_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rule::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Rule::descriptor() {
  ::protobuf_rule_5forder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rule_5forder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Rule& Rule::default_instance() {
  ::protobuf_rule_5forder_2eproto::InitDefaultsRule();
  return *internal_default_instance();
}

Rule* Rule::New(::google::protobuf::Arena* arena) const {
  Rule* n = new Rule;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Rule::Clear() {
// @@protoc_insertion_point(message_clear_start:speech.sparrowhawk.Rule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!main_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*main_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!parens_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*parens_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!assignments_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*assignments_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!redup_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*redup_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Rule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:speech.sparrowhawk.Rule)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string main = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_main()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->main().data(), static_cast<int>(this->main().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "speech.sparrowhawk.Rule.main");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string parens = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parens()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->parens().data(), static_cast<int>(this->parens().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "speech.sparrowhawk.Rule.parens");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string assignments = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_assignments()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->assignments().data(), static_cast<int>(this->assignments().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "speech.sparrowhawk.Rule.assignments");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string redup = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redup()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->redup().data(), static_cast<int>(this->redup().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "speech.sparrowhawk.Rule.redup");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:speech.sparrowhawk.Rule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:speech.sparrowhawk.Rule)
  return false;
#undef DO_
}

void Rule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:speech.sparrowhawk.Rule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string main = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->main().data(), static_cast<int>(this->main().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "speech.sparrowhawk.Rule.main");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->main(), output);
  }

  // optional string parens = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parens().data(), static_cast<int>(this->parens().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "speech.sparrowhawk.Rule.parens");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->parens(), output);
  }

  // optional string assignments = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->assignments().data(), static_cast<int>(this->assignments().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "speech.sparrowhawk.Rule.assignments");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->assignments(), output);
  }

  // optional string redup = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redup().data(), static_cast<int>(this->redup().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "speech.sparrowhawk.Rule.redup");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->redup(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:speech.sparrowhawk.Rule)
}

::google::protobuf::uint8* Rule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:speech.sparrowhawk.Rule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string main = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->main().data(), static_cast<int>(this->main().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "speech.sparrowhawk.Rule.main");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->main(), target);
  }

  // optional string parens = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parens().data(), static_cast<int>(this->parens().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "speech.sparrowhawk.Rule.parens");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->parens(), target);
  }

  // optional string assignments = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->assignments().data(), static_cast<int>(this->assignments().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "speech.sparrowhawk.Rule.assignments");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->assignments(), target);
  }

  // optional string redup = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redup().data(), static_cast<int>(this->redup().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "speech.sparrowhawk.Rule.redup");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->redup(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:speech.sparrowhawk.Rule)
  return target;
}

size_t Rule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:speech.sparrowhawk.Rule)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string main = 1;
  if (has_main()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->main());
  }
  if (_has_bits_[0 / 32] & 14u) {
    // optional string parens = 2;
    if (has_parens()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->parens());
    }

    // optional string assignments = 3;
    if (has_assignments()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->assignments());
    }

    // optional string redup = 4;
    if (has_redup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->redup());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Rule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:speech.sparrowhawk.Rule)
  GOOGLE_DCHECK_NE(&from, this);
  const Rule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Rule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:speech.sparrowhawk.Rule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:speech.sparrowhawk.Rule)
    MergeFrom(*source);
  }
}

void Rule::MergeFrom(const Rule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:speech.sparrowhawk.Rule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_main();
      main_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.main_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_parens();
      parens_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parens_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_assignments();
      assignments_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.assignments_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_redup();
      redup_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redup_);
    }
  }
}

void Rule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:speech.sparrowhawk.Rule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rule::CopyFrom(const Rule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:speech.sparrowhawk.Rule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rule::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Rule::Swap(Rule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rule::InternalSwap(Rule* other) {
  using std::swap;
  main_.Swap(&other->main_);
  parens_.Swap(&other->parens_);
  assignments_.Swap(&other->assignments_);
  redup_.Swap(&other->redup_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Rule::GetMetadata() const {
  protobuf_rule_5forder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rule_5forder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Grammar::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Grammar::kGrammarFileFieldNumber;
const int Grammar::kGrammarNameFieldNumber;
const int Grammar::kRulesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Grammar::Grammar()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rule_5forder_2eproto::InitDefaultsGrammar();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:speech.sparrowhawk.Grammar)
}
Grammar::Grammar(const Grammar& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      rules_(from.rules_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  grammar_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_grammar_file()) {
    grammar_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.grammar_file_);
  }
  grammar_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_grammar_name()) {
    grammar_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.grammar_name_);
  }
  // @@protoc_insertion_point(copy_constructor:speech.sparrowhawk.Grammar)
}

void Grammar::SharedCtor() {
  _cached_size_ = 0;
  grammar_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  grammar_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Grammar::~Grammar() {
  // @@protoc_insertion_point(destructor:speech.sparrowhawk.Grammar)
  SharedDtor();
}

void Grammar::SharedDtor() {
  grammar_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  grammar_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Grammar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Grammar::descriptor() {
  ::protobuf_rule_5forder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rule_5forder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Grammar& Grammar::default_instance() {
  ::protobuf_rule_5forder_2eproto::InitDefaultsGrammar();
  return *internal_default_instance();
}

Grammar* Grammar::New(::google::protobuf::Arena* arena) const {
  Grammar* n = new Grammar;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Grammar::Clear() {
// @@protoc_insertion_point(message_clear_start:speech.sparrowhawk.Grammar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rules_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!grammar_file_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*grammar_file_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!grammar_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*grammar_name_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Grammar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:speech.sparrowhawk.Grammar)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string grammar_file = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_grammar_file()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->grammar_file().data(), static_cast<int>(this->grammar_file().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "speech.sparrowhawk.Grammar.grammar_file");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string grammar_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_grammar_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->grammar_name().data(), static_cast<int>(this->grammar_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "speech.sparrowhawk.Grammar.grammar_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .speech.sparrowhawk.Rule rules = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:speech.sparrowhawk.Grammar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:speech.sparrowhawk.Grammar)
  return false;
#undef DO_
}

void Grammar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:speech.sparrowhawk.Grammar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string grammar_file = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->grammar_file().data(), static_cast<int>(this->grammar_file().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "speech.sparrowhawk.Grammar.grammar_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->grammar_file(), output);
  }

  // required string grammar_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->grammar_name().data(), static_cast<int>(this->grammar_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "speech.sparrowhawk.Grammar.grammar_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->grammar_name(), output);
  }

  // repeated .speech.sparrowhawk.Rule rules = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rules_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rules(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:speech.sparrowhawk.Grammar)
}

::google::protobuf::uint8* Grammar::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:speech.sparrowhawk.Grammar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string grammar_file = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->grammar_file().data(), static_cast<int>(this->grammar_file().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "speech.sparrowhawk.Grammar.grammar_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->grammar_file(), target);
  }

  // required string grammar_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->grammar_name().data(), static_cast<int>(this->grammar_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "speech.sparrowhawk.Grammar.grammar_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->grammar_name(), target);
  }

  // repeated .speech.sparrowhawk.Rule rules = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rules_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->rules(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:speech.sparrowhawk.Grammar)
  return target;
}

size_t Grammar::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:speech.sparrowhawk.Grammar)
  size_t total_size = 0;

  if (has_grammar_file()) {
    // required string grammar_file = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->grammar_file());
  }

  if (has_grammar_name()) {
    // required string grammar_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->grammar_name());
  }

  return total_size;
}
size_t Grammar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:speech.sparrowhawk.Grammar)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string grammar_file = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->grammar_file());

    // required string grammar_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->grammar_name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .speech.sparrowhawk.Rule rules = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->rules_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rules(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Grammar::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:speech.sparrowhawk.Grammar)
  GOOGLE_DCHECK_NE(&from, this);
  const Grammar* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Grammar>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:speech.sparrowhawk.Grammar)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:speech.sparrowhawk.Grammar)
    MergeFrom(*source);
  }
}

void Grammar::MergeFrom(const Grammar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:speech.sparrowhawk.Grammar)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rules_.MergeFrom(from.rules_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_grammar_file();
      grammar_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.grammar_file_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_grammar_name();
      grammar_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.grammar_name_);
    }
  }
}

void Grammar::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:speech.sparrowhawk.Grammar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Grammar::CopyFrom(const Grammar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:speech.sparrowhawk.Grammar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Grammar::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->rules())) return false;
  return true;
}

void Grammar::Swap(Grammar* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Grammar::InternalSwap(Grammar* other) {
  using std::swap;
  rules_.InternalSwap(&other->rules_);
  grammar_file_.Swap(&other->grammar_file_);
  grammar_name_.Swap(&other->grammar_name_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Grammar::GetMetadata() const {
  protobuf_rule_5forder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rule_5forder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sparrowhawk
}  // namespace speech

// @@protoc_insertion_point(global_scope)
