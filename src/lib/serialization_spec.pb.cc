// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: serialization_spec.proto

#include "serialization_spec.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
namespace speech {
namespace sparrowhawk {
class RecordSpecDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecordSpec>
      _instance;
} _RecordSpec_default_instance_;
class StyleSpecDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StyleSpec>
      _instance;
} _StyleSpec_default_instance_;
class ClassSpecDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClassSpec>
      _instance;
} _ClassSpec_default_instance_;
class SerializeSpecDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SerializeSpec>
      _instance;
} _SerializeSpec_default_instance_;
}  // namespace sparrowhawk
}  // namespace speech
namespace protobuf_serialization_5fspec_2eproto {
void InitDefaultsRecordSpecImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::speech::sparrowhawk::_RecordSpec_default_instance_;
    new (ptr) ::speech::sparrowhawk::RecordSpec();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::speech::sparrowhawk::RecordSpec::InitAsDefaultInstance();
}

void InitDefaultsRecordSpec() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRecordSpecImpl);
}

void InitDefaultsStyleSpecImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_serialization_5fspec_2eproto::InitDefaultsRecordSpec();
  {
    void* ptr = &::speech::sparrowhawk::_StyleSpec_default_instance_;
    new (ptr) ::speech::sparrowhawk::StyleSpec();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::speech::sparrowhawk::StyleSpec::InitAsDefaultInstance();
}

void InitDefaultsStyleSpec() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStyleSpecImpl);
}

void InitDefaultsClassSpecImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_serialization_5fspec_2eproto::InitDefaultsStyleSpec();
  {
    void* ptr = &::speech::sparrowhawk::_ClassSpec_default_instance_;
    new (ptr) ::speech::sparrowhawk::ClassSpec();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::speech::sparrowhawk::ClassSpec::InitAsDefaultInstance();
}

void InitDefaultsClassSpec() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClassSpecImpl);
}

void InitDefaultsSerializeSpecImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_serialization_5fspec_2eproto::InitDefaultsClassSpec();
  {
    void* ptr = &::speech::sparrowhawk::_SerializeSpec_default_instance_;
    new (ptr) ::speech::sparrowhawk::SerializeSpec();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::speech::sparrowhawk::SerializeSpec::InitAsDefaultInstance();
}

void InitDefaultsSerializeSpec() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSerializeSpecImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::RecordSpec, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::RecordSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::RecordSpec, prefix_spec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::RecordSpec, suffix_spec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::RecordSpec, field_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::RecordSpec, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::RecordSpec, default_value_),
  ~0u,
  ~0u,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::StyleSpec, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::StyleSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::StyleSpec, record_spec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::StyleSpec, required_fields_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::StyleSpec, prohibited_fields_),
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::ClassSpec, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::ClassSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::ClassSpec, semiotic_class_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::ClassSpec, style_spec_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::SerializeSpec, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::SerializeSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::speech::sparrowhawk::SerializeSpec, class_spec_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::speech::sparrowhawk::RecordSpec)},
  { 15, 23, sizeof(::speech::sparrowhawk::StyleSpec)},
  { 26, 33, sizeof(::speech::sparrowhawk::ClassSpec)},
  { 35, 41, sizeof(::speech::sparrowhawk::SerializeSpec)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::speech::sparrowhawk::_RecordSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::speech::sparrowhawk::_StyleSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::speech::sparrowhawk::_ClassSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::speech::sparrowhawk::_SerializeSpec_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "serialization_spec.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030serialization_spec.proto\022\022speech.sparr"
      "owhawk\"\260\001\n\nRecordSpec\0223\n\013prefix_spec\030\001 \003"
      "(\0132\036.speech.sparrowhawk.RecordSpec\0223\n\013su"
      "ffix_spec\030\002 \003(\0132\036.speech.sparrowhawk.Rec"
      "ordSpec\022\022\n\nfield_path\030\003 \001(\t\022\r\n\005label\030\004 \001"
      "(\t\022\025\n\rdefault_value\030\005 \001(\t\"t\n\tStyleSpec\0223"
      "\n\013record_spec\030\001 \003(\0132\036.speech.sparrowhawk"
      ".RecordSpec\022\027\n\017required_fields\030\002 \003(\t\022\031\n\021"
      "prohibited_fields\030\003 \003(\t\"V\n\tClassSpec\022\026\n\016"
      "semiotic_class\030\001 \001(\t\0221\n\nstyle_spec\030\002 \003(\013"
      "2\035.speech.sparrowhawk.StyleSpec\"B\n\rSeria"
      "lizeSpec\0221\n\nclass_spec\030\001 \003(\0132\035.speech.sp"
      "arrowhawk.ClassSpec"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 499);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "serialization_spec.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_serialization_5fspec_2eproto
namespace speech {
namespace sparrowhawk {

// ===================================================================

void RecordSpec::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecordSpec::kPrefixSpecFieldNumber;
const int RecordSpec::kSuffixSpecFieldNumber;
const int RecordSpec::kFieldPathFieldNumber;
const int RecordSpec::kLabelFieldNumber;
const int RecordSpec::kDefaultValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecordSpec::RecordSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_serialization_5fspec_2eproto::InitDefaultsRecordSpec();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:speech.sparrowhawk.RecordSpec)
}
RecordSpec::RecordSpec(const RecordSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      prefix_spec_(from.prefix_spec_),
      suffix_spec_(from.suffix_spec_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  field_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_field_path()) {
    field_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_path_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_label()) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  default_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_default_value()) {
    default_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_value_);
  }
  // @@protoc_insertion_point(copy_constructor:speech.sparrowhawk.RecordSpec)
}

void RecordSpec::SharedCtor() {
  _cached_size_ = 0;
  field_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RecordSpec::~RecordSpec() {
  // @@protoc_insertion_point(destructor:speech.sparrowhawk.RecordSpec)
  SharedDtor();
}

void RecordSpec::SharedDtor() {
  field_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RecordSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecordSpec::descriptor() {
  ::protobuf_serialization_5fspec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_serialization_5fspec_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecordSpec& RecordSpec::default_instance() {
  ::protobuf_serialization_5fspec_2eproto::InitDefaultsRecordSpec();
  return *internal_default_instance();
}

RecordSpec* RecordSpec::New(::google::protobuf::Arena* arena) const {
  RecordSpec* n = new RecordSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecordSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:speech.sparrowhawk.RecordSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prefix_spec_.Clear();
  suffix_spec_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!field_path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*field_path_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!label_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*label_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!default_value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*default_value_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RecordSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:speech.sparrowhawk.RecordSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .speech.sparrowhawk.RecordSpec prefix_spec = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prefix_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .speech.sparrowhawk.RecordSpec suffix_spec = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_suffix_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string field_path = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field_path().data(), static_cast<int>(this->field_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "speech.sparrowhawk.RecordSpec.field_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string label = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "speech.sparrowhawk.RecordSpec.label");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string default_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->default_value().data(), static_cast<int>(this->default_value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "speech.sparrowhawk.RecordSpec.default_value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:speech.sparrowhawk.RecordSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:speech.sparrowhawk.RecordSpec)
  return false;
#undef DO_
}

void RecordSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:speech.sparrowhawk.RecordSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .speech.sparrowhawk.RecordSpec prefix_spec = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prefix_spec_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->prefix_spec(static_cast<int>(i)), output);
  }

  // repeated .speech.sparrowhawk.RecordSpec suffix_spec = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->suffix_spec_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->suffix_spec(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string field_path = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field_path().data(), static_cast<int>(this->field_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "speech.sparrowhawk.RecordSpec.field_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->field_path(), output);
  }

  // optional string label = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "speech.sparrowhawk.RecordSpec.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->label(), output);
  }

  // optional string default_value = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_value().data(), static_cast<int>(this->default_value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "speech.sparrowhawk.RecordSpec.default_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->default_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:speech.sparrowhawk.RecordSpec)
}

::google::protobuf::uint8* RecordSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:speech.sparrowhawk.RecordSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .speech.sparrowhawk.RecordSpec prefix_spec = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prefix_spec_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->prefix_spec(static_cast<int>(i)), deterministic, target);
  }

  // repeated .speech.sparrowhawk.RecordSpec suffix_spec = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->suffix_spec_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->suffix_spec(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string field_path = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field_path().data(), static_cast<int>(this->field_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "speech.sparrowhawk.RecordSpec.field_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->field_path(), target);
  }

  // optional string label = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "speech.sparrowhawk.RecordSpec.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->label(), target);
  }

  // optional string default_value = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_value().data(), static_cast<int>(this->default_value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "speech.sparrowhawk.RecordSpec.default_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->default_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:speech.sparrowhawk.RecordSpec)
  return target;
}

size_t RecordSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:speech.sparrowhawk.RecordSpec)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .speech.sparrowhawk.RecordSpec prefix_spec = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->prefix_spec_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prefix_spec(static_cast<int>(i)));
    }
  }

  // repeated .speech.sparrowhawk.RecordSpec suffix_spec = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->suffix_spec_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->suffix_spec(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string field_path = 3;
    if (has_field_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field_path());
    }

    // optional string label = 4;
    if (has_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->label());
    }

    // optional string default_value = 5;
    if (has_default_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->default_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecordSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:speech.sparrowhawk.RecordSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const RecordSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecordSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:speech.sparrowhawk.RecordSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:speech.sparrowhawk.RecordSpec)
    MergeFrom(*source);
  }
}

void RecordSpec::MergeFrom(const RecordSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:speech.sparrowhawk.RecordSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  prefix_spec_.MergeFrom(from.prefix_spec_);
  suffix_spec_.MergeFrom(from.suffix_spec_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_field_path();
      field_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_path_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_label();
      label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_default_value();
      default_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_value_);
    }
  }
}

void RecordSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:speech.sparrowhawk.RecordSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecordSpec::CopyFrom(const RecordSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:speech.sparrowhawk.RecordSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecordSpec::IsInitialized() const {
  return true;
}

void RecordSpec::Swap(RecordSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecordSpec::InternalSwap(RecordSpec* other) {
  using std::swap;
  prefix_spec_.InternalSwap(&other->prefix_spec_);
  suffix_spec_.InternalSwap(&other->suffix_spec_);
  field_path_.Swap(&other->field_path_);
  label_.Swap(&other->label_);
  default_value_.Swap(&other->default_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecordSpec::GetMetadata() const {
  protobuf_serialization_5fspec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_serialization_5fspec_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StyleSpec::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StyleSpec::kRecordSpecFieldNumber;
const int StyleSpec::kRequiredFieldsFieldNumber;
const int StyleSpec::kProhibitedFieldsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StyleSpec::StyleSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_serialization_5fspec_2eproto::InitDefaultsStyleSpec();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:speech.sparrowhawk.StyleSpec)
}
StyleSpec::StyleSpec(const StyleSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      record_spec_(from.record_spec_),
      required_fields_(from.required_fields_),
      prohibited_fields_(from.prohibited_fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:speech.sparrowhawk.StyleSpec)
}

void StyleSpec::SharedCtor() {
  _cached_size_ = 0;
}

StyleSpec::~StyleSpec() {
  // @@protoc_insertion_point(destructor:speech.sparrowhawk.StyleSpec)
  SharedDtor();
}

void StyleSpec::SharedDtor() {
}

void StyleSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StyleSpec::descriptor() {
  ::protobuf_serialization_5fspec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_serialization_5fspec_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StyleSpec& StyleSpec::default_instance() {
  ::protobuf_serialization_5fspec_2eproto::InitDefaultsStyleSpec();
  return *internal_default_instance();
}

StyleSpec* StyleSpec::New(::google::protobuf::Arena* arena) const {
  StyleSpec* n = new StyleSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StyleSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:speech.sparrowhawk.StyleSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_spec_.Clear();
  required_fields_.Clear();
  prohibited_fields_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StyleSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:speech.sparrowhawk.StyleSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .speech.sparrowhawk.RecordSpec record_spec = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_record_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string required_fields = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_required_fields()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->required_fields(this->required_fields_size() - 1).data(),
            static_cast<int>(this->required_fields(this->required_fields_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "speech.sparrowhawk.StyleSpec.required_fields");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string prohibited_fields = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_prohibited_fields()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->prohibited_fields(this->prohibited_fields_size() - 1).data(),
            static_cast<int>(this->prohibited_fields(this->prohibited_fields_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "speech.sparrowhawk.StyleSpec.prohibited_fields");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:speech.sparrowhawk.StyleSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:speech.sparrowhawk.StyleSpec)
  return false;
#undef DO_
}

void StyleSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:speech.sparrowhawk.StyleSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .speech.sparrowhawk.RecordSpec record_spec = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_spec_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->record_spec(static_cast<int>(i)), output);
  }

  // repeated string required_fields = 2;
  for (int i = 0, n = this->required_fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_fields(i).data(), static_cast<int>(this->required_fields(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "speech.sparrowhawk.StyleSpec.required_fields");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->required_fields(i), output);
  }

  // repeated string prohibited_fields = 3;
  for (int i = 0, n = this->prohibited_fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->prohibited_fields(i).data(), static_cast<int>(this->prohibited_fields(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "speech.sparrowhawk.StyleSpec.prohibited_fields");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->prohibited_fields(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:speech.sparrowhawk.StyleSpec)
}

::google::protobuf::uint8* StyleSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:speech.sparrowhawk.StyleSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .speech.sparrowhawk.RecordSpec record_spec = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_spec_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->record_spec(static_cast<int>(i)), deterministic, target);
  }

  // repeated string required_fields = 2;
  for (int i = 0, n = this->required_fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_fields(i).data(), static_cast<int>(this->required_fields(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "speech.sparrowhawk.StyleSpec.required_fields");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->required_fields(i), target);
  }

  // repeated string prohibited_fields = 3;
  for (int i = 0, n = this->prohibited_fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->prohibited_fields(i).data(), static_cast<int>(this->prohibited_fields(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "speech.sparrowhawk.StyleSpec.prohibited_fields");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->prohibited_fields(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:speech.sparrowhawk.StyleSpec)
  return target;
}

size_t StyleSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:speech.sparrowhawk.StyleSpec)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .speech.sparrowhawk.RecordSpec record_spec = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->record_spec_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->record_spec(static_cast<int>(i)));
    }
  }

  // repeated string required_fields = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->required_fields_size());
  for (int i = 0, n = this->required_fields_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->required_fields(i));
  }

  // repeated string prohibited_fields = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->prohibited_fields_size());
  for (int i = 0, n = this->prohibited_fields_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->prohibited_fields(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StyleSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:speech.sparrowhawk.StyleSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const StyleSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StyleSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:speech.sparrowhawk.StyleSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:speech.sparrowhawk.StyleSpec)
    MergeFrom(*source);
  }
}

void StyleSpec::MergeFrom(const StyleSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:speech.sparrowhawk.StyleSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  record_spec_.MergeFrom(from.record_spec_);
  required_fields_.MergeFrom(from.required_fields_);
  prohibited_fields_.MergeFrom(from.prohibited_fields_);
}

void StyleSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:speech.sparrowhawk.StyleSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StyleSpec::CopyFrom(const StyleSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:speech.sparrowhawk.StyleSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StyleSpec::IsInitialized() const {
  return true;
}

void StyleSpec::Swap(StyleSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StyleSpec::InternalSwap(StyleSpec* other) {
  using std::swap;
  record_spec_.InternalSwap(&other->record_spec_);
  required_fields_.InternalSwap(&other->required_fields_);
  prohibited_fields_.InternalSwap(&other->prohibited_fields_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StyleSpec::GetMetadata() const {
  protobuf_serialization_5fspec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_serialization_5fspec_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClassSpec::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClassSpec::kSemioticClassFieldNumber;
const int ClassSpec::kStyleSpecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClassSpec::ClassSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_serialization_5fspec_2eproto::InitDefaultsClassSpec();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:speech.sparrowhawk.ClassSpec)
}
ClassSpec::ClassSpec(const ClassSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      style_spec_(from.style_spec_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  semiotic_class_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_semiotic_class()) {
    semiotic_class_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.semiotic_class_);
  }
  // @@protoc_insertion_point(copy_constructor:speech.sparrowhawk.ClassSpec)
}

void ClassSpec::SharedCtor() {
  _cached_size_ = 0;
  semiotic_class_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ClassSpec::~ClassSpec() {
  // @@protoc_insertion_point(destructor:speech.sparrowhawk.ClassSpec)
  SharedDtor();
}

void ClassSpec::SharedDtor() {
  semiotic_class_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClassSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClassSpec::descriptor() {
  ::protobuf_serialization_5fspec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_serialization_5fspec_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClassSpec& ClassSpec::default_instance() {
  ::protobuf_serialization_5fspec_2eproto::InitDefaultsClassSpec();
  return *internal_default_instance();
}

ClassSpec* ClassSpec::New(::google::protobuf::Arena* arena) const {
  ClassSpec* n = new ClassSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClassSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:speech.sparrowhawk.ClassSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  style_spec_.Clear();
  if (has_semiotic_class()) {
    GOOGLE_DCHECK(!semiotic_class_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*semiotic_class_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClassSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:speech.sparrowhawk.ClassSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string semiotic_class = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_semiotic_class()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->semiotic_class().data(), static_cast<int>(this->semiotic_class().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "speech.sparrowhawk.ClassSpec.semiotic_class");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .speech.sparrowhawk.StyleSpec style_spec = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_style_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:speech.sparrowhawk.ClassSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:speech.sparrowhawk.ClassSpec)
  return false;
#undef DO_
}

void ClassSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:speech.sparrowhawk.ClassSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string semiotic_class = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->semiotic_class().data(), static_cast<int>(this->semiotic_class().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "speech.sparrowhawk.ClassSpec.semiotic_class");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->semiotic_class(), output);
  }

  // repeated .speech.sparrowhawk.StyleSpec style_spec = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->style_spec_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->style_spec(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:speech.sparrowhawk.ClassSpec)
}

::google::protobuf::uint8* ClassSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:speech.sparrowhawk.ClassSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string semiotic_class = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->semiotic_class().data(), static_cast<int>(this->semiotic_class().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "speech.sparrowhawk.ClassSpec.semiotic_class");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->semiotic_class(), target);
  }

  // repeated .speech.sparrowhawk.StyleSpec style_spec = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->style_spec_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->style_spec(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:speech.sparrowhawk.ClassSpec)
  return target;
}

size_t ClassSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:speech.sparrowhawk.ClassSpec)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .speech.sparrowhawk.StyleSpec style_spec = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->style_spec_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->style_spec(static_cast<int>(i)));
    }
  }

  // optional string semiotic_class = 1;
  if (has_semiotic_class()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->semiotic_class());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClassSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:speech.sparrowhawk.ClassSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const ClassSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClassSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:speech.sparrowhawk.ClassSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:speech.sparrowhawk.ClassSpec)
    MergeFrom(*source);
  }
}

void ClassSpec::MergeFrom(const ClassSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:speech.sparrowhawk.ClassSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  style_spec_.MergeFrom(from.style_spec_);
  if (from.has_semiotic_class()) {
    set_has_semiotic_class();
    semiotic_class_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.semiotic_class_);
  }
}

void ClassSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:speech.sparrowhawk.ClassSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClassSpec::CopyFrom(const ClassSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:speech.sparrowhawk.ClassSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClassSpec::IsInitialized() const {
  return true;
}

void ClassSpec::Swap(ClassSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClassSpec::InternalSwap(ClassSpec* other) {
  using std::swap;
  style_spec_.InternalSwap(&other->style_spec_);
  semiotic_class_.Swap(&other->semiotic_class_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClassSpec::GetMetadata() const {
  protobuf_serialization_5fspec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_serialization_5fspec_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SerializeSpec::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SerializeSpec::kClassSpecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SerializeSpec::SerializeSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_serialization_5fspec_2eproto::InitDefaultsSerializeSpec();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:speech.sparrowhawk.SerializeSpec)
}
SerializeSpec::SerializeSpec(const SerializeSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      class_spec_(from.class_spec_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:speech.sparrowhawk.SerializeSpec)
}

void SerializeSpec::SharedCtor() {
  _cached_size_ = 0;
}

SerializeSpec::~SerializeSpec() {
  // @@protoc_insertion_point(destructor:speech.sparrowhawk.SerializeSpec)
  SharedDtor();
}

void SerializeSpec::SharedDtor() {
}

void SerializeSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SerializeSpec::descriptor() {
  ::protobuf_serialization_5fspec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_serialization_5fspec_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SerializeSpec& SerializeSpec::default_instance() {
  ::protobuf_serialization_5fspec_2eproto::InitDefaultsSerializeSpec();
  return *internal_default_instance();
}

SerializeSpec* SerializeSpec::New(::google::protobuf::Arena* arena) const {
  SerializeSpec* n = new SerializeSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SerializeSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:speech.sparrowhawk.SerializeSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  class_spec_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SerializeSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:speech.sparrowhawk.SerializeSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .speech.sparrowhawk.ClassSpec class_spec = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_class_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:speech.sparrowhawk.SerializeSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:speech.sparrowhawk.SerializeSpec)
  return false;
#undef DO_
}

void SerializeSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:speech.sparrowhawk.SerializeSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .speech.sparrowhawk.ClassSpec class_spec = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->class_spec_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->class_spec(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:speech.sparrowhawk.SerializeSpec)
}

::google::protobuf::uint8* SerializeSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:speech.sparrowhawk.SerializeSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .speech.sparrowhawk.ClassSpec class_spec = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->class_spec_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->class_spec(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:speech.sparrowhawk.SerializeSpec)
  return target;
}

size_t SerializeSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:speech.sparrowhawk.SerializeSpec)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .speech.sparrowhawk.ClassSpec class_spec = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->class_spec_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->class_spec(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SerializeSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:speech.sparrowhawk.SerializeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const SerializeSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SerializeSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:speech.sparrowhawk.SerializeSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:speech.sparrowhawk.SerializeSpec)
    MergeFrom(*source);
  }
}

void SerializeSpec::MergeFrom(const SerializeSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:speech.sparrowhawk.SerializeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  class_spec_.MergeFrom(from.class_spec_);
}

void SerializeSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:speech.sparrowhawk.SerializeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SerializeSpec::CopyFrom(const SerializeSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:speech.sparrowhawk.SerializeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SerializeSpec::IsInitialized() const {
  return true;
}

void SerializeSpec::Swap(SerializeSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SerializeSpec::InternalSwap(SerializeSpec* other) {
  using std::swap;
  class_spec_.InternalSwap(&other->class_spec_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SerializeSpec::GetMetadata() const {
  protobuf_serialization_5fspec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_serialization_5fspec_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sparrowhawk
}  // namespace speech

// @@protoc_insertion_point(global_scope)
