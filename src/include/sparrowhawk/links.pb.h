// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: links.proto

#ifndef PROTOBUF_links_2eproto__INCLUDED
#define PROTOBUF_links_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_links_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsLinksImpl();
void InitDefaultsLinks();
inline void InitDefaults() {
  InitDefaultsLinks();
}
}  // namespace protobuf_links_2eproto
namespace speech {
namespace sparrowhawk {
class Links;
class LinksDefaultTypeInternal;
extern LinksDefaultTypeInternal _Links_default_instance_;
}  // namespace sparrowhawk
}  // namespace speech
namespace speech {
namespace sparrowhawk {

// ===================================================================

class Links : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:speech.sparrowhawk.Links) */ {
 public:
  Links();
  virtual ~Links();

  Links(const Links& from);

  inline Links& operator=(const Links& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Links(Links&& from) noexcept
    : Links() {
    *this = ::std::move(from);
  }

  inline Links& operator=(Links&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Links& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Links* internal_default_instance() {
    return reinterpret_cast<const Links*>(
               &_Links_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Links* other);
  friend void swap(Links& a, Links& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Links* New() const PROTOBUF_FINAL { return New(NULL); }

  Links* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Links& from);
  void MergeFrom(const Links& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Links* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 own_index = 1;
  bool has_own_index() const;
  void clear_own_index();
  static const int kOwnIndexFieldNumber = 1;
  ::google::protobuf::int32 own_index() const;
  void set_own_index(::google::protobuf::int32 value);

  // optional int32 parent = 2;
  bool has_parent() const;
  void clear_parent();
  static const int kParentFieldNumber = 2;
  ::google::protobuf::int32 parent() const;
  void set_parent(::google::protobuf::int32 value);

  // optional int32 first_child = 3;
  bool has_first_child() const;
  void clear_first_child();
  static const int kFirstChildFieldNumber = 3;
  ::google::protobuf::int32 first_child() const;
  void set_first_child(::google::protobuf::int32 value);

  // optional int32 last_child = 4;
  bool has_last_child() const;
  void clear_last_child();
  static const int kLastChildFieldNumber = 4;
  ::google::protobuf::int32 last_child() const;
  void set_last_child(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:speech.sparrowhawk.Links)
 private:
  void set_has_own_index();
  void clear_has_own_index();
  void set_has_parent();
  void clear_has_parent();
  void set_has_first_child();
  void clear_has_first_child();
  void set_has_last_child();
  void clear_has_last_child();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 own_index_;
  ::google::protobuf::int32 parent_;
  ::google::protobuf::int32 first_child_;
  ::google::protobuf::int32 last_child_;
  friend struct ::protobuf_links_2eproto::TableStruct;
  friend void ::protobuf_links_2eproto::InitDefaultsLinksImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Links

// optional int32 own_index = 1;
inline bool Links::has_own_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Links::set_has_own_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Links::clear_has_own_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Links::clear_own_index() {
  own_index_ = 0;
  clear_has_own_index();
}
inline ::google::protobuf::int32 Links::own_index() const {
  // @@protoc_insertion_point(field_get:speech.sparrowhawk.Links.own_index)
  return own_index_;
}
inline void Links::set_own_index(::google::protobuf::int32 value) {
  set_has_own_index();
  own_index_ = value;
  // @@protoc_insertion_point(field_set:speech.sparrowhawk.Links.own_index)
}

// optional int32 parent = 2;
inline bool Links::has_parent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Links::set_has_parent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Links::clear_has_parent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Links::clear_parent() {
  parent_ = 0;
  clear_has_parent();
}
inline ::google::protobuf::int32 Links::parent() const {
  // @@protoc_insertion_point(field_get:speech.sparrowhawk.Links.parent)
  return parent_;
}
inline void Links::set_parent(::google::protobuf::int32 value) {
  set_has_parent();
  parent_ = value;
  // @@protoc_insertion_point(field_set:speech.sparrowhawk.Links.parent)
}

// optional int32 first_child = 3;
inline bool Links::has_first_child() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Links::set_has_first_child() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Links::clear_has_first_child() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Links::clear_first_child() {
  first_child_ = 0;
  clear_has_first_child();
}
inline ::google::protobuf::int32 Links::first_child() const {
  // @@protoc_insertion_point(field_get:speech.sparrowhawk.Links.first_child)
  return first_child_;
}
inline void Links::set_first_child(::google::protobuf::int32 value) {
  set_has_first_child();
  first_child_ = value;
  // @@protoc_insertion_point(field_set:speech.sparrowhawk.Links.first_child)
}

// optional int32 last_child = 4;
inline bool Links::has_last_child() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Links::set_has_last_child() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Links::clear_has_last_child() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Links::clear_last_child() {
  last_child_ = 0;
  clear_has_last_child();
}
inline ::google::protobuf::int32 Links::last_child() const {
  // @@protoc_insertion_point(field_get:speech.sparrowhawk.Links.last_child)
  return last_child_;
}
inline void Links::set_last_child(::google::protobuf::int32 value) {
  set_has_last_child();
  last_child_ = value;
  // @@protoc_insertion_point(field_set:speech.sparrowhawk.Links.last_child)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace sparrowhawk
}  // namespace speech

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_links_2eproto__INCLUDED
